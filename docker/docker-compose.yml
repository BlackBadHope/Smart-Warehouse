version: '3.8'

services:
  inventory-home:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: inventory-os-home
    restart: unless-stopped
    ports:
      - "3001:3001"    # HTTP Server
      - "8080:8080"    # WebSocket Server
    volumes:
      - inventory_data:/app/data
      - inventory_backups:/app/backups
    environment:
      - NODE_ENV=production
      - PORT=3001
      - WS_PORT=8080
      - DB_PATH=/app/data/inventory.db
      - BACKUP_PATH=/app/backups
      - AUTO_BACKUP=true
      - BACKUP_INTERVAL=24h
      - MAX_BACKUPS=7
    networks:
      - inventory_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory.rule=Host(\`inventory.local\`)"
      - "traefik.http.services.inventory.loadbalancer.server.port=3001"

  # Optional: Traefik reverse proxy for custom domains
  traefik:
    image: traefik:v2.10
    container_name: inventory-traefik
    restart: unless-stopped
    profiles:
      - proxy
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - traefik_data:/data
    networks:
      - inventory_network
    environment:
      - TRAEFIK_API_DASHBOARD=true
      - TRAEFIK_API_INSECURE=true

  # Optional: Backup service
  backup:
    image: alpine:latest
    container_name: inventory-backup
    restart: unless-stopped
    profiles:
      - backup
    volumes:
      - inventory_data:/data:ro
      - inventory_backups:/backups
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
      - RETENTION_DAYS=30
    command: |
      sh -c "
        apk add --no-cache dcron sqlite &&
        echo '$$BACKUP_SCHEDULE cd /data && sqlite3 inventory.db \".backup /backups/inventory-\$(date +%Y%m%d_%H%M%S).db\"' > /var/spool/cron/crontabs/root &&
        echo '$$BACKUP_SCHEDULE find /backups -name \"inventory-*.db\" -mtime +$$RETENTION_DAYS -delete' >> /var/spool/cron/crontabs/root &&
        crond -f -d 8
      "
    depends_on:
      - inventory-home

volumes:
  inventory_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
  inventory_backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./backups
  traefik_data:

networks:
  inventory_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16