// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Inventory OS
import puppeteer from 'puppeteer';

async function simpleTest() {
  console.log('üöÄ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç Inventory OS...');
  
  let browser;
  try {
    browser = await puppeteer.launch({ 
      headless: "new",
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page = await browser.newPage();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∫–æ–Ω—Å–æ–ª–∏
    const consoleErrors = [];
    page.on('console', msg => {
      if (msg.type() === 'error') {
        consoleErrors.push(msg.text());
      }
    });
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    console.log('üì± –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    await page.goto('http://localhost:5173', { 
      waitUntil: 'networkidle0',
      timeout: 30000 
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤...');
    const title = await page.title();
    console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${title}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ h1
    const h1Exists = await page.$('h1') !== null;
    console.log(`   ‚úÖ H1 –∑–∞–≥–æ–ª–æ–≤–æ–∫: ${h1Exists ? '–ù–∞–π–¥–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    
    if (h1Exists) {
      const h1Text = await page.$eval('h1', el => el.textContent);
      console.log(`   üì¶ –¢–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞: "${h1Text}"`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π –ø–æ —Ç–µ–∫—Å—Ç—É
    const pageText = await page.evaluate(() => document.body.textContent);
    
    console.log('üèóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–Ω–µ–ª–µ–π:');
    console.log(`   WAREHOUSES: ${pageText.includes('WAREHOUSES') ? '‚úÖ' : '‚ùå'}`);
    console.log(`   ROOMS: ${pageText.includes('ROOMS') ? '‚úÖ' : '‚ùå'}`);
    console.log(`   CONTAINERS: ${pageText.includes('CONTAINERS') ? '‚úÖ' : '‚ùå'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º design mode
    const bodyClasses = await page.evaluate(() => document.body.className);
    console.log(`üé® CSS –∫–ª–∞—Å—Å—ã body: ${bodyClasses}`);
    
    const designerModeActive = bodyClasses.includes('designer-mode');
    console.log(`   Designer Mode: ${designerModeActive ? '‚ùå –í–ö–õ–Æ–ß–ï–ù (–ë–ê–ì!)' : '‚úÖ –û—Ç–∫–ª—é—á–µ–Ω'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏
    const buttonCount = await page.$$eval('button', buttons => buttons.length);
    console.log(`üîò –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫: ${buttonCount}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SMARTIE –∫–Ω–æ–ø–∫–∏
    const smartieExists = pageText.includes('SMARTIE') || pageText.includes('AI') || pageText.includes('üß†');
    console.log(`üß† SMARTIE –∫–Ω–æ–ø–∫–∞: ${smartieExists ? '‚úÖ' : '‚ùå'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º self-test –∫–Ω–æ–ø–∫—É
    const selfTestExists = await page.$('button[title*="Self-Test"]') !== null;
    console.log(`üß™ Self-Test –∫–Ω–æ–ø–∫–∞: ${selfTestExists ? '‚úÖ' : '‚ùå'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ (–Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã)
    const modals = await page.$$('div[class*="fixed inset-0"]:not([style*="display: none"])');
    console.log(`üì± –û—Ç–∫—Ä—ã—Ç—ã–µ –º–æ–¥–∞–ª—ã: ${modals.length === 0 ? '‚úÖ –ù–µ—Ç' : `‚ùå ${modals.length} –æ—Ç–∫—Ä—ã—Ç–æ`}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
    console.log(`üêõ –û—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏: ${consoleErrors.length === 0 ? '‚úÖ –ù–µ—Ç' : `‚ùå ${consoleErrors.length} –Ω–∞–π–¥–µ–Ω–æ`}`);
    if (consoleErrors.length > 0) {
      console.log('   –û—à–∏–±–∫–∏:');
      consoleErrors.forEach((error, i) => {
        console.log(`   ${i + 1}. ${error}`);
      });
    }
    
    // –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–ª–∞–¥–∞
    console.log('üè≠ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–ª–∞–¥–∞...');
    try {
      // –ò—â–µ–º –∫–Ω–æ–ø–∫—É + —Ä—è–¥–æ–º —Å WAREHOUSES
      const warehouseSection = await page.evaluateHandle(() => {
        const headers = Array.from(document.querySelectorAll('h2'));
        return headers.find(h => h.textContent?.includes('WAREHOUSES'));
      });
      
      if (warehouseSection) {
        console.log('   ‚úÖ –°–µ–∫—Ü–∏—è WAREHOUSES –Ω–∞–π–¥–µ–Ω–∞');
        
        // –ò—â–µ–º –∫–Ω–æ–ø–∫—É + –≤ —Ç–æ–π –∂–µ –æ–±–ª–∞—Å—Ç–∏
        const plusButton = await page.$('button svg[data-lucide="plus"]');
        if (plusButton) {
          console.log('   ‚úÖ –ö–Ω–æ–ø–∫–∞ + –Ω–∞–π–¥–µ–Ω–∞');
          await plusButton.click();
          
          // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª–∞
          await page.waitForTimeout(500);
          
          const modalAppeared = await page.$('div[class*="fixed inset-0"]') !== null;
          console.log(`   üì± –ú–æ–¥–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è: ${modalAppeared ? '‚úÖ –ü–æ—è–≤–∏–ª—Å—è' : '‚ùå –ù–µ –ø–æ—è–≤–∏–ª—Å—è'}`);
          
          if (modalAppeared) {
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
            const closeBtn = await page.$('button:has-text("Cancel"), button[class*="√ó"]');
            if (closeBtn) {
              await closeBtn.click();
              console.log('   ‚úÖ –ú–æ–¥–∞–ª –∑–∞–∫—Ä—ã—Ç');
            }
          }
        } else {
          console.log('   ‚ùå –ö–Ω–æ–ø–∫–∞ + –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
      } else {
        console.log('   ‚ùå –°–µ–∫—Ü–∏—è WAREHOUSES –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error.message}`);
    }
    
    console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
    // –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    const issues = [];
    if (designerModeActive) issues.push('Designer Mode –≤–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
    if (consoleErrors.length > 0) issues.push(`${consoleErrors.length} –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏`);
    if (!pageText.includes('WAREHOUSES')) issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–Ω–µ–ª—å WAREHOUSES');
    if (!smartieExists) issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç SMARTIE');
    if (!selfTestExists) issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Self-Test');
    
    console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
    if (issues.length === 0) {
      console.log('üéâ –ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é.');
    } else {
      console.log(`‚ùå –ù–∞–π–¥–µ–Ω–æ ${issues.length} –ø—Ä–æ–±–ª–µ–º:`);
      issues.forEach((issue, i) => {
        console.log(`   ${i + 1}. ${issue}`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:', error.message);
  } finally {
    if (browser) {
      await browser.close();
    }
  }
}

simpleTest();